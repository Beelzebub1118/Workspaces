<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>